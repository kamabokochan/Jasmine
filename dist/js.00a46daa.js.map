{"version":3,"sources":["js/index.js"],"names":["MMD_SETTING","constructor","init","scene","THREE","Scene","clock","Clock","setLight","setDisplay","setCamera","bindEvent","loader","MMDLoader","LoadPMX","LoadStage","vmd","LoadVMD","helper","MMDAnimationHelper","add","mesh","animation","physics","mixer","objects","get","existingAction","setLoop","LoopOnce","Render","document","body","appendChild","renderer","domElement","ambient","AmbientLight","WebGLRenderer","alpha","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","setClearColor","camera","PerspectiveCamera","position","set","controls","OrbitControls","enableDamping","dampingFactor","tick","update","render","requestAnimationFrame","addEventListener","onWindowResize","aspect","updateProjectionMatrix","models","path","modelFile","Promise","resolve","load","object","y","onProgress","onError","stage","loadAnimation","xhr","lengthComputable","percentComplete","loaded","total","console","log","Math","round","clear","getDelta"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"../src","sourcesContent":["class MMD_SETTING {\n  constructor() {\n    this.init();\n  }\n\n  async init() {\n    // シーンの作成\n    this.scene = new THREE.Scene();\n    this.clock = new THREE.Clock();\n    this.setLight();\n    this.setDisplay();\n    this.setCamera();\n    this.bindEvent();\n    this.loader = new THREE.MMDLoader();\n    await this.LoadPMX();\n    await this.LoadStage();\n    this.vmd = await this.LoadVMD();\n    this.helper = new THREE.MMDAnimationHelper();\n\n    this.helper.add(this.mesh, {\n      animation: this.vmd,\n      physics: false\n    });\n\n    const mixer = this.helper.objects.get(this.mesh).mixer;\n    mixer.existingAction(this.vmd).setLoop(THREE.LoopOnce);\n\n    // // VMD Loop Event\n    // mixer.addEventListener(\"loop\", (event) => {\n    //   console.log(\"loop\");\n    // });\n\n    // // VMD Loop Once Event\n    // mixer.addEventListener(\"finished\", (event) => {\n    //   console.log(\"finished\");\n    // });\n    this.Render();\n    // documentにMMDをセットする\n    document.body.appendChild(this.renderer.domElement);\n  }\n\n  setLight() {\n    // 光の作成\n    const ambient = new THREE.AmbientLight(0xeeeeee);\n    this.scene.add(ambient);\n  }\n\n  setDisplay() {\n    // 画面表示の設定\n    this.renderer = new THREE.WebGLRenderer({ alpha: true });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setClearColor(0xcccccc, 0);\n  }\n\n  setCamera() {\n    // カメラを作成 (視野角, 画面のアスペクト比, カメラに映る最短距離, カメラに映る最遠距離)\n    this.camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 1000);\n    this.camera.position.set(0, 10, 50);\n\n    // カメラコントローラーを作成\n    const controls = new THREE.OrbitControls(this.camera);\n\n    // 滑らかにカメラコントローラーを制御する\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.2;\n\n    // 毎フレーム時に実行されるループイベントです\n    const tick = () => {\n      // カメラコントローラーを更新\n      controls.update();\n\n      // レンダリング\n      this.renderer.render(this.scene, this.camera);\n\n      requestAnimationFrame(tick);\n    }\n\n    tick();\n  }\n\n  bindEvent() {\n    window.addEventListener('resize', () => this.onWindowResize());\n  }\n\n  onWindowResize() {\n    // https://ics.media/tutorial-three/renderer_resize/\n    // レンダラーのサイズを調整する\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    // カメラのアスペクト比を正す\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n  }\n\n  LoadPMX() {\n    // モデルとモーションの読み込み準備\n    const models = [\n      {\n        path: \"./static/pmx/zenitsu/zenitsu_taifuku.pmx\"\n      },\n      {\n        path: \"./static/pmx/zenitsu/zenitsu_haori.pmx\"\n      }\n    ]\n\n    var modelFile = models[1].path;\n\n    return new Promise(resolve => {\n      this.loader.load(modelFile, (object) => {\n        this.mesh = object;\n        this.mesh.position.y = -10;\n        this.scene.add(this.mesh);\n        resolve(true);\n      }, this.onProgress, this.onError);\n    });\n  }\n\n  LoadStage() {\n    const stage = './static/pmx/wasitsu/円窓ステージ.pmx';\n\n    return new Promise(resolve => {\n      this.loader.load(stage, (object) => {\n        object.position.y = -10;\n        this.scene.add(object);\n        resolve(true);\n      }, this.onProgress, this.onError);\n    });\n  }\n\n  LoadVMD() {\n    const path = './static/vmd/極楽上半身ボーンが長い用.vmd';\n\n    return new Promise(resolve => {\n      this.loader.loadAnimation(path, this.mesh, (vmd) => {\n        resolve(vmd);\n      }, this.onProgress, this.onError);\n    })\n  }\n\n  onProgress(xhr) {\n    if (xhr.lengthComputable) {\n      const percentComplete = xhr.loaded / xhr.total * 100;\n      console.log(Math.round(percentComplete, 2) + '% downloaded');\n    }\n  }\n\n  onError(xhr) {\n    console.log(\"ERROR\");\n  }\n\n  Render() {\n    requestAnimationFrame(() => this.Render());\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n    this.helper.update(this.clock.getDelta());\n  }\n}\n\nnew MMD_SETTING();"]}